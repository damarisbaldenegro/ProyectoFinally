<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /9k=
</value>
  </data>
</root>